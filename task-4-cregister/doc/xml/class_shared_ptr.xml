<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_shared_ptr" kind="class" language="C++" prot="public">
    <compoundname>SharedPtr</compoundname>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_shared_ptr_1a069ec0c77003c29d6548bb258aad1486" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* SharedPtr&lt; T &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="181" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shared_ptr_1ad11083dd849ffb64a8c4b90dbcbea4f5" prot="private" static="no" mutable="no">
        <type><ref refid="struct_shared_ptr_ref_counter" kindref="compound">SharedPtrRefCounter</ref> *</type>
        <definition>SharedPtrRefCounter* SharedPtr&lt; T &gt;::refCounter</definition>
        <argsstring></argsstring>
        <name>refCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="182" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shared_ptr_1a3410dfca05f2433ab644a4deb8c999e7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SharedPtr&lt; T &gt;::isZero</definition>
        <argsstring></argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="183" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_shared_ptr_1a8b08806704038d3625f602770ab86b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>()</argsstring>
        <name>SharedPtr</name>
        <briefdescription>
<para>Implicit constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="57" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a70fc6184e0a3c52e83b4f6c5936ac2e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Constructs shared pointer from regular pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>source pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="67" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a3122b763646a303fd28bf8df26402fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SharedPtr&lt; T &gt;::~SharedPtr</definition>
        <argsstring>()</argsstring>
        <name>~SharedPtr</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="74" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a34db5e6bef95ba285d107f11ee1aadd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(const SharedPtr&lt; T &gt; &amp;sptr)</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
          <declname>sptr</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="84" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a43d8e89da28ea2e56aa8dd33e28f75fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
        <definition>SharedPtr&amp; SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SharedPtr &amp;ptr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Assigment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="90" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="90" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a60c6ad99b5288512217fbe896328b663" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
        <definition>const SharedPtr&amp; SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SharedPtr &amp;ptr) const </argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="108" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="108" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a9e4c510e0479a7e99509579adbae1160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* SharedPtr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Dereferencing -&gt; operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="122" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a5f9a5fcc8bec9890218b293e3e413732" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* SharedPtr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Constant dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="128" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1abcfd27d9c2ceb24c93d927dd9aaf21dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; SharedPtr&lt; T &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferencing * operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="134" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1aaef77dda31a8ca98ea04e5e738c0ac3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
        <definition>SharedPtr&amp; SharedPtr&lt; T &gt;::Detach</definition>
        <argsstring>()</argsstring>
        <name>Detach</name>
        <briefdescription>
<para>Make detached copy of content. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new shared pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="143" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a5d4082ef174d44167ac8e7cc29e12a14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
        <definition>SharedPtr&amp; SharedPtr&lt; T &gt;::DetachIfShared</definition>
        <argsstring>()</argsstring>
        <name>DetachIfShared</name>
        <briefdescription>
<para>Make detached copy of content only if this pointer is shared. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new or old shared pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="157" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="157" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a732b497ad88d69f1cfa4a913dbcca901" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SharedPtr&lt; T &gt;::operator==</definition>
        <argsstring>(const SharedPtr &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="170" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1ac49d9f2aaef6f9d20a31659e2bff393e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SharedPtr&lt; T &gt;::operator&lt;</definition>
        <argsstring>(const SharedPtr &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="176" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_shared_ptr_1a71738ccd2063846edf5f906f24f29fe1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SharedPtr&lt; T &gt;::operator&gt;</definition>
        <argsstring>(const SharedPtr &amp;rhs) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_shared_ptr" kindref="compound">SharedPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="178" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="178" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Custom class for shared pointer. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="52" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="51" bodyend="184"/>
    <listofallmembers>
      <member refid="class_shared_ptr_1aaef77dda31a8ca98ea04e5e738c0ac3a" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>Detach</name></member>
      <member refid="class_shared_ptr_1a5d4082ef174d44167ac8e7cc29e12a14" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>DetachIfShared</name></member>
      <member refid="class_shared_ptr_1a3410dfca05f2433ab644a4deb8c999e7" prot="private" virt="non-virtual"><scope>SharedPtr</scope><name>isZero</name></member>
      <member refid="class_shared_ptr_1abcfd27d9c2ceb24c93d927dd9aaf21dc" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator*</name></member>
      <member refid="class_shared_ptr_1a9e4c510e0479a7e99509579adbae1160" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator-&gt;</name></member>
      <member refid="class_shared_ptr_1a5f9a5fcc8bec9890218b293e3e413732" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator-&gt;</name></member>
      <member refid="class_shared_ptr_1ac49d9f2aaef6f9d20a31659e2bff393e" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator&lt;</name></member>
      <member refid="class_shared_ptr_1a43d8e89da28ea2e56aa8dd33e28f75fa" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator=</name></member>
      <member refid="class_shared_ptr_1a60c6ad99b5288512217fbe896328b663" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator=</name></member>
      <member refid="class_shared_ptr_1a732b497ad88d69f1cfa4a913dbcca901" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator==</name></member>
      <member refid="class_shared_ptr_1a71738ccd2063846edf5f906f24f29fe1" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>operator&gt;</name></member>
      <member refid="class_shared_ptr_1a069ec0c77003c29d6548bb258aad1486" prot="private" virt="non-virtual"><scope>SharedPtr</scope><name>ptr</name></member>
      <member refid="class_shared_ptr_1ad11083dd849ffb64a8c4b90dbcbea4f5" prot="private" virt="non-virtual"><scope>SharedPtr</scope><name>refCounter</name></member>
      <member refid="class_shared_ptr_1a8b08806704038d3625f602770ab86b5c" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="class_shared_ptr_1a70fc6184e0a3c52e83b4f6c5936ac2e3" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="class_shared_ptr_1a34db5e6bef95ba285d107f11ee1aadd2" prot="public" virt="non-virtual"><scope>SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="class_shared_ptr_1a3122b763646a303fd28bf8df26402fdc" prot="public" virt="virtual"><scope>SharedPtr</scope><name>~SharedPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
