<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_owner" kind="class" language="C++" prot="public">
    <compoundname>COwner</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_owner_1a5750a4019448a66ea7d1dd665f7f019c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* COwner::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Owner&apos;s name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="699" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_owner_1ae92710724c8314903d756148b9730d91" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* COwner::surname</definition>
        <argsstring></argsstring>
        <name>surname</name>
        <briefdescription>
<para>Owner&apos;s surname. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="701" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_owner_1a7681b80a3657e087b20468868688b891" prot="public" static="no" mutable="no">
        <type><ref refid="class_shared_ptr" kindref="compound">CCarListSPtr</ref></type>
        <definition>CCarListSPtr COwner::cars</definition>
        <argsstring></argsstring>
        <name>cars</name>
        <briefdescription>
<para>List of owner&apos;s cars. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="703" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="703" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_owner_1ace5fff6ad4702ca5994bf09582526607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>COwner::COwner</definition>
        <argsstring>()</argsstring>
        <name>COwner</name>
        <briefdescription>
<para>Implicit constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="623" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="623" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="class_c_owner_1a8f5e40d5c4bf62ff658722f54b8c17d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>COwner::COwner</definition>
        <argsstring>(const char *name, const char *surname)</argsstring>
        <name>COwner</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surname</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>owner name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surname</parametername>
</parameternamelist>
<parameterdescription>
<para>owner surname </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="635" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="635" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="class_c_owner_1a674448500b955becd3f14351d33df655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>COwner::COwner</definition>
        <argsstring>(const COwner &amp;own)</argsstring>
        <name>COwner</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>own</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="643" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="643" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_c_owner_1a444c4c2f422b4a9ac435309c7e515dd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>COwner::~COwner</definition>
        <argsstring>()</argsstring>
        <name>~COwner</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="654" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="654" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_c_owner_1a78df1d737a3b6c0d45f441f2a882ab62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
        <definition>COwner&amp; COwner::operator=</definition>
        <argsstring>(const COwner &amp;own)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>own</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="661" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="661" bodyend="673"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_owner_1a5208db7d0f4060512e486f78dd940ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="676" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="676" bodyend="676"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a852922935d8a83ebb8837aa28f89fabf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="678" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="678" bodyend="678"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a1b6e700d8c4ba8583a96202883a8f80a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="680" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a8287f2d0df920f3657745f7eb043bc8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="685" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="685" bodyend="685"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a0e4a6b959ff9b8a5f8c4f157293d01a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="687" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a75a26630f5656fdcdf2b96111bfaec81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const COwner &amp;lhs, const COwner &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="689" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_owner_1a4a9921cd7527cb2e3add15e3bd85f235" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const COwner &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_owner" kindref="compound">COwner</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Output operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="692" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="692" bodyend="696"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Instance of owner. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="17">
        <label>SharedPtr&lt; CCarList &gt;</label>
        <link refid="class_shared_ptr"/>
      </node>
      <node id="16">
        <label>COwner</label>
        <link refid="class_c_owner"/>
        <childnode refid="17" relation="usage">
          <edgelabel>cars</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" line="620" column="1" bodyfile="D:/progtest-pa2-ls2015/PA2/task-4-cregister/src/main.cpp" bodystart="619" bodyend="704"/>
    <listofallmembers>
      <member refid="class_c_owner_1a7681b80a3657e087b20468868688b891" prot="public" virt="non-virtual"><scope>COwner</scope><name>cars</name></member>
      <member refid="class_c_owner_1ace5fff6ad4702ca5994bf09582526607" prot="public" virt="non-virtual"><scope>COwner</scope><name>COwner</name></member>
      <member refid="class_c_owner_1a8f5e40d5c4bf62ff658722f54b8c17d5" prot="public" virt="non-virtual"><scope>COwner</scope><name>COwner</name></member>
      <member refid="class_c_owner_1a674448500b955becd3f14351d33df655" prot="public" virt="non-virtual"><scope>COwner</scope><name>COwner</name></member>
      <member refid="class_c_owner_1a5750a4019448a66ea7d1dd665f7f019c" prot="public" virt="non-virtual"><scope>COwner</scope><name>name</name></member>
      <member refid="class_c_owner_1a852922935d8a83ebb8837aa28f89fabf" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator!=</name></member>
      <member refid="class_c_owner_1a1b6e700d8c4ba8583a96202883a8f80a" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator&lt;</name></member>
      <member refid="class_c_owner_1a4a9921cd7527cb2e3add15e3bd85f235" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_c_owner_1a0e4a6b959ff9b8a5f8c4f157293d01a0" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator&lt;=</name></member>
      <member refid="class_c_owner_1a78df1d737a3b6c0d45f441f2a882ab62" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator=</name></member>
      <member refid="class_c_owner_1a5208db7d0f4060512e486f78dd940ed4" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator==</name></member>
      <member refid="class_c_owner_1a8287f2d0df920f3657745f7eb043bc8e" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator&gt;</name></member>
      <member refid="class_c_owner_1a75a26630f5656fdcdf2b96111bfaec81" prot="public" virt="non-virtual"><scope>COwner</scope><name>operator&gt;=</name></member>
      <member refid="class_c_owner_1ae92710724c8314903d756148b9730d91" prot="public" virt="non-virtual"><scope>COwner</scope><name>surname</name></member>
      <member refid="class_c_owner_1a444c4c2f422b4a9ac435309c7e515dd0" prot="public" virt="non-virtual"><scope>COwner</scope><name>~COwner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
